

plugins {
	id 'java'
	//id 'org.springframework.boot' version '3.4.1'
//	id 'io.spring.dependency-management' version '1.1.7+'
//  id("io.spring.dependency-management") version "1.1.7"
	id 'org.cyclonedx.bom' version '1.10.0'
	id("io.freefair.lombok") version "8.11"
}

allprojects {
	repositories {
		mavenCentral()
	}
//	plugins{
//		id("io.freefair.lombok") version "8.11"
//	}

//apply plugin: 'org.springframework.boot'
//apply plugin: 'io.spring.dependency-management'

//apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
}

//https://stackoverflow.com/questions/12077083/what-is-the-difference-between-allprojects-and-subprojects
subprojects {
	apply plugin: 'java'
	apply plugin: 'io.freefair.lombok'
	dependencies {

//https://projectlombok.org/setup/gradle
//		compileOnly 'org.projectlombok:lombok:1.18.36'
//		annotationProcessor 'org.projectlombok:lombok:1.18.36'
//
//		testCompileOnly 'org.projectlombok:lombok:1.18.36'
//		testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
	 
//dependencies {
    implementation enforcedPlatform('org.springframework.boot:spring-boot-dependencies:3.4.1')
	implementation enforcedPlatform('org.springframework.cloud:spring-cloud-dependencies:2023.0.3')
	implementation enforcedPlatform('software.amazon.awssdk:bom:2.29.35')
//}
	}

//	plugins {
//		id("io.freefair.lombok") version "8.11"
//	}
}


//javaPlatform {
//	allowDependencies()
//}

//dependencyManagement {
//	imports {
	//	mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
//	}
//}




//group = 'com.example'
//version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
//	runtimeOnly 'org.postgresql:postgresql'
//	annotationProcessor 'org.projectlombok:lombok'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//	// https://mvnrepository.com/artifact/com.h2database/h2
//	testImplementation 'com.h2database:h2:1.3.148+'
//
//}

tasks.named('test') {
	useJUnitPlatform()
}

//https://discuss.gradle.org/t/what-is-xlint-deprecation-and-how-to-use-it/40270/2
tasks.withType(JavaCompile).configureEach {
	options.deprecation = true
}

//or if you rather explicitly set the compiler argument, you can do so as well:

//tasks.withType(JavaCompile) {
//	options.compilerArgs += ['-Xlint:deprecation']
//}
